import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        String result = "============= Order details =============\n";
        String itemId, newDish;
        Double itemPrice;
        Double totalPrice;

        HashMap<String, Double> MenuItem = new HashMap<>();

        for (String input : inputs) {
            String dish[] = input.split(" x ");
            itemId = dish[0];
            for (Item item : itemRepository.findAll()) {
                if (item.getId().equals(itemId)) {
                    itemPrice = item.getPrice();
                    newDish = input.replace(itemId, item.getName());
                    MenuItem.put(itemId, itemPrice * Integer.parseInt(dish[1]));
                    result += newDish + " = " + itemPrice.intValue() * Integer.parseInt(dish[1]) + " yuan\n";
                    break;
                }
            }
        }
        result += "-----------------------------------\n";
        totalPrice = MenuItem.entrySet().stream().mapToDouble(t->t.getValue()).sum();


        List<SalesPromotion> promotionList = salesPromotionRepository.findAll();
        List<String> halfPriceList = new ArrayList<>();
        for (SalesPromotion salesPromotion : promotionList) {
            if (salesPromotion.getType().equals("50%_DISCOUNT_ON_SPECIFIED_ITEMS")) {
                for(String key : MenuItem.keySet()) {
                    if (salesPromotion.getRelatedItems().contains(key)) {
                        MenuItem.put(key, MenuItem.get(key) * 0.5);
                        halfPriceList.add(key);
                    }
                }
            }
        }

        Double promotionPrice;
        Boolean hvPromotion = false;
        promotionPrice = MenuItem.entrySet().stream().mapToDouble(t -> t.getValue()).sum();

        if (totalPrice > 30 && totalPrice - 6 < promotionPrice) {
            promotionPrice = totalPrice - 6;
            hvPromotion = true;
        }

        if (hvPromotion) {
            result += "Promotion used:\n" +
                    "满30减6 yuan，saving 6 yuan\n" +
                    "-----------------------------------\n";
        } else if(promotionPrice < totalPrice) {
            List<String> nameList = new ArrayList<>();
            MenuItem.forEach((key, value) -> {
                if (halfPriceList.contains(key)) {
                    for (Item item : itemRepository.findAll()) {
                        if (item.getId().equals(key)) {
                            nameList.add(0, item.getName());
                            break;
                        }
                        }
                }
            });
            String nameString = String.join(", ", nameList);
            result += "Promotion used:\n" +
                    "Half price for certain dishes (" + nameString +
                    "), saving " + (int)(totalPrice - promotionPrice) +" yuan\n" +
                    "-----------------------------------\n";
        }

        result += "Total:" + promotionPrice.intValue() + " yuan\n" +
                "===================================";
        System.out.println(result);

        return result;
    }
}

